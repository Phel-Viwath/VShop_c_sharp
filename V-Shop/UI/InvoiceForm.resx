<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="productInCardBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>225, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA49JREFUeF7tnd1qFEEQRmNeQCSgF5I30RvJM2hCVETxRsHoO+qNPy+j3up6alMF
        S9zM9sz09Ez3fAcKJOmeqq+Oa4KE7JEQQgghhBBCCCGEEEIIcc1ms3lMvacuqRP/cPOQ9T71irqizqhj
        /9Q8MMAD6gu1y0/q0o80CxlfUL8t8A4/qId+pCw0vkN9tin28Jd660ebw7J5xn18pcq/Umj6aNv+dpqU
        Ypk8WxdP/Hg5aGpfMw7RlBTL4pkO8cGvlIOm59e9D9KEFMvgWVIo/zWUpncp+wKeQtVSbHbPkILt5J5f
        LQuNn1Kpg1YpxWb22VOwc8/86jwwwGvqj02TgA38zq8uHmZ9Q9WXjUGak8KMdcoIGKgZKcxWt4yAwaqX
        wkxtyAgYsFopzNKWjIBBq5PCDG3KCBi4Gin0bltGwOCLl0LPdcgICLBYKfRal4yAIIuTQo91yggItBgp
        PHvdMgKCzS6FZ0rGLgScTQrPkox9ELS4FJ4hGV0QuJgU7kpGCgSfXAp3JKMPLGAyKZyVjCGwiOxSOCMZ
        Y2Ah2aTwOcnIAYsZLYWPSUZOWNBgKfxZMqaARfWWQknGlLCwvj9+0+dscz/iWgQW1+eVkoJeGWNhgbmk
        SEYuWORYKZKRGxY6VIpkTAWL7StFMqaE5fb51taQkKlgsX1lBJKSGxY6VEYgKblgkWNlBJIyFhaYS0Yg
        KUNhcfqvk6XAwvq8MrZ/66k+3xJv73g70QWL6i3Dr9pdSckJCxosI+BjkpIDFjNaRsDnJGUMLCSbjIAz
        kjIEFpFdRsBZSekDC5hMRsAdSUmB4JPLCLgrKV0QuJiMgGdIyj4IWlxGwLMkZRcCziYj4JmSYhBsdhkB
        z163FAItRkZAj3VKIcjiZAT0WpcUAixWRkDPdUhh8MXLCOjdthQGrkZGwAxtSmHQ6mQEzNKWFAasVkbA
        TG1IYbDqZQTMVrcUBmpGRsCMdUphkOZkBMxalxQGuPBBUrBza/hFyhd+tSw0PqFuvn/GbVQpI7DZPUMK
        v6jyv2qcpi+37Q9TtYzAMniWFJ77tXLQ9NN1706akBFYFs90iCu/Ug6a2nsuddGUjMAyebYuzvx4OWh6
        TH3ftv+fJmUEls0z7uMbNc+bg9H4lLopxb6onfuRZrGMnnUXk3HqR+aBAeyVYv98faTsbfPmeTOTGbCs
        ntmyz/+2eUIIIYQQQgghhBBCCCEWwdHRP4mAo04d6avOAAAAAElFTkSuQmCC
</value>
  </data>
</root>