<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA7xJREFUeF7tnFmL01AYhgf0HyiooI43bjC4zZXeuV25jAoFd73Tq0m3mfauv2b8
        PQpu4HbhBm6g6KDjjPp+8B0pZ07anPQkTZP3gZfQNl+a8z1NUtokU4QQQgghhBBCCCGEEEIIIYQQQggh
        hBBCJp9er7ex1WrN6MPC0W63t0r0Ybmp1WobIONes9n80Wg0juvThWF+fn4L1u0R8rRer2/Tp8uJkYH8
        lYgUTE/oy2PHyDDrhzwp7ZZiyzApihRpvCXDpHxS4mSYiBTkpM6eO9JwrMdje71MsG4PkM06+2QzTIaJ
        SEFjTmlZbiwuLm7H+z+z18eR+91ud5OWTS4YyAya/c0anDMiBcltS8F77UCeu9bFDuZbw/SSlk42GMwx
        DOZr/wAHZBnzn9bSzPCRgfzBN8I7WloOsDs6ioEllfITzTqrpcHpdDo7k8rAfGvIbS0tFxjgLAb3xR50
        TDKRIjKw7BfWezkjMjC9paXlBAOcRT6bQQ8KGvIL03NaOjKUEcPCwsIRDDaxFOS8lqYGy5rGcl7ay4/J
        KlINGYY8pWAZXjJwAL+ppdUCTTqMfHI0ZV1ECr4YzGlpYlBLGT5kKSWKol2oe2UvJyaUYUCTD/lIQS5o
        aSzYJe7GfK9dy3BEjhk3tJQIPlKQFcx/UUvXITIwzxurJi6UEYdIQXM+9jVrUJxSfGVgN3VdS4kLNOgg
        GpVUyiq2qitaKsejPXiOMkKDT/4BNMxLishA3jped4UyfFEpH6xGxmUFSSQQ0n5jelnfhviA5u1D8971
        N3TEyNZ0TRdP0hBQCmWEIoCUVewCr+riSAjwdXYvxCQ9aPeHMrIihRTKyBIKKRAiAw1OcxzhwTw0IQ7q
        lBKIADJMKGVUoijajya+dzQ3bfiTSVr400mBSPOLL8IfF7PAU4ZsGf9P7xQpeMyf30OB3VTuf1Ah/LfQ
        hcjAJzzI/+oiBa/z//S0oHleZ54MkmHgGScp8ZWBLWlOS4eCmmmEUpKCXUvmZy+ilqeQJiEPGQYsI7EU
        zFedk6wNGHDuZ8DzzPcYMFCva0QQXo6QFTggj/0qKl49pWBgPtcZypZxRkuDg3Xxur4Quaul5cBTxjK2
        pMwvjxYpeK8kl0NLyiMFA+Fl0UVCbhyAwSzZA7SDecZyN4fK3ThAGCZFZGA6tvudYBdZnVtrGOKkjFuG
        QaRgXapx8xmDLUVkNAp0z6xK3Z7JYKQg34skwyBSIOIh1q/8NzAz8BZ/hBBCCCGEEEIIIYQQQgghhBBC
        CCGEEELyYWrqH26sp4q0g3jDAAAAAElFTkSuQmCC
</value>
  </data>
</root>